#include "TClass.h"

using namespace std;

// 템플릿 클래스를 정의하려면?
// 그냥은 정의 불가능 : 템플릿 자체에 범위가 적용되기 때문에
//                     (템플릿 선언 안에서 이루어진 코드는 밖에서 접근 불가)

// 정의할 때도 템플릿을 써줘야 한다(단, 함수 제외)

// ---------------------------------------------------------

// template <typename T>         ← 여기서는 템플릿 코드라는 것을 선언
// void TClass<T>::print()       ← 여기서 클래스 이름 뒤에 임시 자료형 T로 만들어진 클래스
// {
// 	cout << data << endl;        ← 코드 작성
// }

// -----------------------------------------------------------

// 이렇게 작성하면.. 문제가 없겠죠? → 그런데 문제가 있습니다
// C++에서는 h에서 작성해준 템플릿 범위를 못 읽는 경우가 (매우 자주) 일어납니다

// 이 코드는 여기서 쓸 수 없습니다 ← 코드상에 문제가 없지만 C++에 문제가 있습니다
// 컴파일을 위한 일기 중에서 템플릿 범위로 들어오려고 할 떄, C++이 해당 코드를 재정의라고 착각